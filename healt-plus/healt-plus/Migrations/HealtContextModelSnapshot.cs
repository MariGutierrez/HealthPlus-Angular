// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using healt_plus.Models;

#nullable disable

namespace healt_plus.Migrations
{
    [DbContext(typeof(HealtContext))]
    partial class HealtContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("healt_plus.Models.Alertum", b =>
                {
                    b.Property<int>("IdAlerta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idAlerta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAlerta"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime?>("FechaHora")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_hora");

                    b.Property<int?>("IdPaciente")
                        .HasColumnType("int")
                        .HasColumnName("idPaciente");

                    b.HasKey("IdAlerta")
                        .HasName("PK__alerta__D09954271E2F4244");

                    b.HasIndex("IdPaciente");

                    b.ToTable("alerta", (string)null);
                });

            modelBuilder.Entity("healt_plus.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCliente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<bool?>("Estatus")
                        .HasColumnType("bit")
                        .HasColumnName("estatus");

                    b.Property<int>("IdServicio")
                        .HasColumnType("int")
                        .HasColumnName("idServicio");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.HasKey("IdCliente")
                        .HasName("PK__cliente__885457EE7B3759F6");

                    b.HasIndex("IdServicio");

                    b.HasIndex("IdUsuario");

                    b.ToTable("cliente", (string)null);
                });

            modelBuilder.Entity("healt_plus.Models.Doctor", b =>
                {
                    b.Property<int>("IdDoctor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDoctor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDoctor"));

                    b.Property<string>("Cedula")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cedula");

                    b.Property<int>("IdHorario")
                        .HasColumnType("int")
                        .HasColumnName("idHorario");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int")
                        .HasColumnName("idPersona");

                    b.Property<string>("NumDoctor")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("num_doctor");

                    b.HasKey("IdDoctor")
                        .HasName("PK__doctor__418956C332497D0B");

                    b.HasIndex("IdHorario");

                    b.HasIndex("IdPersona");

                    b.ToTable("doctor", (string)null);
                });

            modelBuilder.Entity("healt_plus.Models.Enfermero", b =>
                {
                    b.Property<int>("IdEnfermero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idEnfermero");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEnfermero"));

                    b.Property<int>("IdHorario")
                        .HasColumnType("int")
                        .HasColumnName("idHorario");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int")
                        .HasColumnName("idPersona");

                    b.Property<string>("NumEnfermero")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("num_enfermero");

                    b.Property<string>("Titulo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("titulo");

                    b.HasKey("IdEnfermero")
                        .HasName("PK__enfermer__A823C618021FFC13");

                    b.HasIndex("IdHorario");

                    b.HasIndex("IdPersona");

                    b.ToTable("enfermero", (string)null);
                });

            modelBuilder.Entity("healt_plus.Models.HistoricoHorarioEnfermero", b =>
                {
                    b.Property<int>("IdHistorico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idHistorico");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHistorico"));

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_fin");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_inicio");

                    b.Property<int>("IdEnfermero")
                        .HasColumnType("int")
                        .HasColumnName("idEnfermero");

                    b.Property<int>("IdHorario")
                        .HasColumnType("int")
                        .HasColumnName("idHorario");

                    b.HasKey("IdHistorico")
                        .HasName("PK__historic__4712CB725B643371");

                    b.HasIndex("IdEnfermero");

                    b.HasIndex("IdHorario");

                    b.ToTable("historico_horario_enfermero", (string)null);
                });

            modelBuilder.Entity("healt_plus.Models.Horario", b =>
                {
                    b.Property<int>("IdHorario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idHorario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHorario"));

                    b.Property<DateTime?>("HoraFin")
                        .HasColumnType("datetime")
                        .HasColumnName("hora_fin");

                    b.Property<DateTime?>("HoraInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("hora_inicio");

                    b.HasKey("IdHorario")
                        .HasName("PK__horario__DE60F33ABFBBDE37");

                    b.ToTable("horario", (string)null);
                });

            modelBuilder.Entity("healt_plus.Models.LoteProducto", b =>
                {
                    b.Property<int>("IdLote")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idLote");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLote"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<int>("IdServicio")
                        .HasColumnType("int")
                        .HasColumnName("idServicio");

                    b.Property<string>("Modelo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("modelo");

                    b.Property<double?>("Precio")
                        .HasColumnType("float")
                        .HasColumnName("precio");

                    b.Property<double?>("PrecioLote")
                        .HasColumnType("float")
                        .HasColumnName("precio_lote");

                    b.HasKey("IdLote")
                        .HasName("PK__lote_pro__1B91FFCBCFFBF0DD");

                    b.HasIndex("IdServicio");

                    b.ToTable("lote_producto", (string)null);
                });

            modelBuilder.Entity("healt_plus.Models.MonitoreoSalud", b =>
                {
                    b.Property<int>("IdMonitoreo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idMonitoreo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMonitoreo"));

                    b.Property<DateTime?>("FechaHora")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_hora");

                    b.Property<int?>("IdPaciente")
                        .HasColumnType("int")
                        .HasColumnName("idPaciente");

                    b.Property<int?>("RitmoCardiaco")
                        .HasColumnType("int")
                        .HasColumnName("ritmo_cardiaco");

                    b.Property<string>("Tipo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tipo");

                    b.HasKey("IdMonitoreo")
                        .HasName("PK__monitore__69E8E0BF18412C05");

                    b.HasIndex("IdPaciente");

                    b.ToTable("monitoreo_salud", (string)null);
                });

            modelBuilder.Entity("healt_plus.Models.Paciente", b =>
                {
                    b.Property<int>("IdPaciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPaciente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPaciente"));

                    b.Property<string>("Altura")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("altura");

                    b.Property<bool?>("Estatus")
                        .HasColumnType("bit")
                        .HasColumnName("estatus");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int")
                        .HasColumnName("idPersona");

                    b.Property<string>("NumPaciente")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("num_paciente");

                    b.Property<string>("Peso")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("peso");

                    b.Property<string>("TipoSangre")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("tipo_sangre");

                    b.HasKey("IdPaciente")
                        .HasName("PK__paciente__F48A08F23CA962BC");

                    b.HasIndex("IdPersona");

                    b.ToTable("paciente", (string)null);
                });

            modelBuilder.Entity("healt_plus.Models.PacientePadecimiento", b =>
                {
                    b.Property<int>("IdPacientePadecimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPacientePadecimiento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPacientePadecimiento"));

                    b.Property<int>("IdPaciente")
                        .HasColumnType("int")
                        .HasColumnName("idPaciente");

                    b.Property<int>("IdPadecimiento")
                        .HasColumnType("int")
                        .HasColumnName("idPadecimiento");

                    b.HasKey("IdPacientePadecimiento")
                        .HasName("PK__paciente__3AE7E25428566CC2");

                    b.HasIndex("IdPaciente");

                    b.HasIndex("IdPadecimiento");

                    b.ToTable("paciente_padecimiento", (string)null);
                });

            modelBuilder.Entity("healt_plus.Models.Padecimiento", b =>
                {
                    b.Property<int>("IdPadecimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPadecimiento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPadecimiento"));

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.HasKey("IdPadecimiento")
                        .HasName("PK__padecimi__D21C34317EFEF763");

                    b.ToTable("padecimiento", (string)null);
                });

            modelBuilder.Entity("healt_plus.Models.Persona", b =>
                {
                    b.Property<int>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPersona");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPersona"));

                    b.Property<string>("Calle")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("calle");

                    b.Property<string>("CodigoPostal")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("codigo_postal");

                    b.Property<string>("Colonia")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("colonia");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("Numero")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("numero");

                    b.Property<string>("PrimerApellido")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("primer_apellido");

                    b.Property<string>("SegundoApellido")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("segundo_apellido");

                    b.Property<string>("Telefono")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("telefono");

                    b.HasKey("IdPersona")
                        .HasName("PK__persona__A478814116DC655E");

                    b.ToTable("persona", (string)null);
                });

            modelBuilder.Entity("healt_plus.Models.Recordatorio", b =>
                {
                    b.Property<int>("IdRecordatorio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idRecordatorio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRecordatorio"));

                    b.Property<string>("CantidadMedicamento")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cantidad_medicamento");

                    b.Property<bool?>("Estatus")
                        .HasColumnType("bit")
                        .HasColumnName("estatus");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_fin");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_inicio");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("int")
                        .HasColumnName("idPaciente");

                    b.Property<string>("Medicamento")
                        .HasColumnType("text")
                        .HasColumnName("medicamento");

                    b.HasKey("IdRecordatorio")
                        .HasName("PK__recordat__D132AA4273EF3229");

                    b.HasIndex("IdPaciente");

                    b.ToTable("recordatorio", (string)null);
                });

            modelBuilder.Entity("healt_plus.Models.RecordatorioPorTurno", b =>
                {
                    b.Property<int>("IdEnfermero")
                        .HasColumnType("int")
                        .HasColumnName("idEnfermero");

                    b.Property<int>("IdRecordatorio")
                        .HasColumnType("int")
                        .HasColumnName("idRecordatorio");

                    b.HasIndex("IdEnfermero");

                    b.HasIndex("IdRecordatorio");

                    b.ToTable("recordatorio_por_turno", (string)null);
                });

            modelBuilder.Entity("healt_plus.Models.Servicio", b =>
                {
                    b.Property<int>("IdServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idServicio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdServicio"));

                    b.Property<bool?>("Estatus")
                        .HasColumnType("bit")
                        .HasColumnName("estatus");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_fin");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_inicio");

                    b.Property<DateTime?>("FechaPago")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_pago");

                    b.Property<double?>("Precio")
                        .HasColumnType("float")
                        .HasColumnName("precio");

                    b.HasKey("IdServicio")
                        .HasName("PK__servicio__CEB9811931F2D7E3");

                    b.ToTable("servicio", (string)null);
                });

            modelBuilder.Entity("healt_plus.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Contrasenia")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contrasenia");

                    b.Property<bool?>("Estatus")
                        .HasColumnType("bit")
                        .HasColumnName("estatus");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int")
                        .HasColumnName("idPersona");

                    b.Property<string>("Usuario1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usuario");

                    b.HasKey("IdUsuario")
                        .HasName("PK__usuario__645723A6FB9FF7FF");

                    b.HasIndex("IdPersona");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("healt_plus.Models.Alertum", b =>
                {
                    b.HasOne("healt_plus.Models.Paciente", "IdPacienteNavigation")
                        .WithMany("Alerta")
                        .HasForeignKey("IdPaciente")
                        .HasConstraintName("FK__alerta__idPacien__44FF419A");

                    b.Navigation("IdPacienteNavigation");
                });

            modelBuilder.Entity("healt_plus.Models.Cliente", b =>
                {
                    b.HasOne("healt_plus.Models.Servicio", "IdServicioNavigation")
                        .WithMany("Clientes")
                        .HasForeignKey("IdServicio")
                        .IsRequired()
                        .HasConstraintName("FK__cliente__idServi__60A75C0F");

                    b.HasOne("healt_plus.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Clientes")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK__cliente__idUsuar__5FB337D6");

                    b.Navigation("IdServicioNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("healt_plus.Models.Doctor", b =>
                {
                    b.HasOne("healt_plus.Models.Horario", "IdHorarioNavigation")
                        .WithMany("Doctors")
                        .HasForeignKey("IdHorario")
                        .IsRequired()
                        .HasConstraintName("FK__doctor__idHorari__4AB81AF0");

                    b.HasOne("healt_plus.Models.Persona", "IdPersonaNavigation")
                        .WithMany("Doctors")
                        .HasForeignKey("IdPersona")
                        .IsRequired()
                        .HasConstraintName("FK__doctor__idPerson__49C3F6B7");

                    b.Navigation("IdHorarioNavigation");

                    b.Navigation("IdPersonaNavigation");
                });

            modelBuilder.Entity("healt_plus.Models.Enfermero", b =>
                {
                    b.HasOne("healt_plus.Models.Horario", "IdHorarioNavigation")
                        .WithMany("Enfermeros")
                        .HasForeignKey("IdHorario")
                        .IsRequired()
                        .HasConstraintName("FK__enfermero__idHor__4E88ABD4");

                    b.HasOne("healt_plus.Models.Persona", "IdPersonaNavigation")
                        .WithMany("Enfermeros")
                        .HasForeignKey("IdPersona")
                        .IsRequired()
                        .HasConstraintName("FK__enfermero__idPer__4D94879B");

                    b.Navigation("IdHorarioNavigation");

                    b.Navigation("IdPersonaNavigation");
                });

            modelBuilder.Entity("healt_plus.Models.HistoricoHorarioEnfermero", b =>
                {
                    b.HasOne("healt_plus.Models.Enfermero", "IdEnfermeroNavigation")
                        .WithMany("HistoricoHorarioEnfermeros")
                        .HasForeignKey("IdEnfermero")
                        .IsRequired()
                        .HasConstraintName("FK__historico__idEnf__5165187F");

                    b.HasOne("healt_plus.Models.Horario", "IdHorarioNavigation")
                        .WithMany("HistoricoHorarioEnfermeros")
                        .HasForeignKey("IdHorario")
                        .IsRequired()
                        .HasConstraintName("FK__historico__idHor__52593CB8");

                    b.Navigation("IdEnfermeroNavigation");

                    b.Navigation("IdHorarioNavigation");
                });

            modelBuilder.Entity("healt_plus.Models.LoteProducto", b =>
                {
                    b.HasOne("healt_plus.Models.Servicio", "IdServicioNavigation")
                        .WithMany("LoteProductos")
                        .HasForeignKey("IdServicio")
                        .IsRequired()
                        .HasConstraintName("FK__lote_prod__idSer__6383C8BA");

                    b.Navigation("IdServicioNavigation");
                });

            modelBuilder.Entity("healt_plus.Models.MonitoreoSalud", b =>
                {
                    b.HasOne("healt_plus.Models.Paciente", "IdPacienteNavigation")
                        .WithMany("MonitoreoSaluds")
                        .HasForeignKey("IdPaciente")
                        .HasConstraintName("FK__monitoreo__idPac__4222D4EF");

                    b.Navigation("IdPacienteNavigation");
                });

            modelBuilder.Entity("healt_plus.Models.Paciente", b =>
                {
                    b.HasOne("healt_plus.Models.Persona", "IdPersonaNavigation")
                        .WithMany("Pacientes")
                        .HasForeignKey("IdPersona")
                        .IsRequired()
                        .HasConstraintName("FK__paciente__idPers__3B75D760");

                    b.Navigation("IdPersonaNavigation");
                });

            modelBuilder.Entity("healt_plus.Models.PacientePadecimiento", b =>
                {
                    b.HasOne("healt_plus.Models.Paciente", "IdPacienteNavigation")
                        .WithMany("PacientePadecimientos")
                        .HasForeignKey("IdPaciente")
                        .IsRequired()
                        .HasConstraintName("FK__paciente___idPac__3E52440B");

                    b.HasOne("healt_plus.Models.Padecimiento", "IdPadecimientoNavigation")
                        .WithMany("PacientePadecimientos")
                        .HasForeignKey("IdPadecimiento")
                        .IsRequired()
                        .HasConstraintName("FK__paciente___idPad__3F466844");

                    b.Navigation("IdPacienteNavigation");

                    b.Navigation("IdPadecimientoNavigation");
                });

            modelBuilder.Entity("healt_plus.Models.Recordatorio", b =>
                {
                    b.HasOne("healt_plus.Models.Paciente", "IdPacienteNavigation")
                        .WithMany("Recordatorios")
                        .HasForeignKey("IdPaciente")
                        .IsRequired()
                        .HasConstraintName("FK__recordato__idPac__5535A963");

                    b.Navigation("IdPacienteNavigation");
                });

            modelBuilder.Entity("healt_plus.Models.RecordatorioPorTurno", b =>
                {
                    b.HasOne("healt_plus.Models.Enfermero", "IdEnfermeroNavigation")
                        .WithMany()
                        .HasForeignKey("IdEnfermero")
                        .IsRequired()
                        .HasConstraintName("FK__recordato__idEnf__571DF1D5");

                    b.HasOne("healt_plus.Models.Recordatorio", "IdRecordatorioNavigation")
                        .WithMany()
                        .HasForeignKey("IdRecordatorio")
                        .IsRequired()
                        .HasConstraintName("FK__recordato__idRec__5812160E");

                    b.Navigation("IdEnfermeroNavigation");

                    b.Navigation("IdRecordatorioNavigation");
                });

            modelBuilder.Entity("healt_plus.Models.Usuario", b =>
                {
                    b.HasOne("healt_plus.Models.Persona", "IdPersonaNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdPersona")
                        .IsRequired()
                        .HasConstraintName("FK__usuario__idPerso__5AEE82B9");

                    b.Navigation("IdPersonaNavigation");
                });

            modelBuilder.Entity("healt_plus.Models.Enfermero", b =>
                {
                    b.Navigation("HistoricoHorarioEnfermeros");
                });

            modelBuilder.Entity("healt_plus.Models.Horario", b =>
                {
                    b.Navigation("Doctors");

                    b.Navigation("Enfermeros");

                    b.Navigation("HistoricoHorarioEnfermeros");
                });

            modelBuilder.Entity("healt_plus.Models.Paciente", b =>
                {
                    b.Navigation("Alerta");

                    b.Navigation("MonitoreoSaluds");

                    b.Navigation("PacientePadecimientos");

                    b.Navigation("Recordatorios");
                });

            modelBuilder.Entity("healt_plus.Models.Padecimiento", b =>
                {
                    b.Navigation("PacientePadecimientos");
                });

            modelBuilder.Entity("healt_plus.Models.Persona", b =>
                {
                    b.Navigation("Doctors");

                    b.Navigation("Enfermeros");

                    b.Navigation("Pacientes");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("healt_plus.Models.Servicio", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("LoteProductos");
                });

            modelBuilder.Entity("healt_plus.Models.Usuario", b =>
                {
                    b.Navigation("Clientes");
                });
#pragma warning restore 612, 618
        }
    }
}
